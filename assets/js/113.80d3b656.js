(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{674:function(s,t,a){"use strict";a.r(t);var n=a(58),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"java基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java基础"}},[s._v("#")]),s._v(" Java基础")]),s._v(" "),a("p",[s._v("第一个Java代码")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第一行的第三个单词必须和所在文件名称完全一样，大小写也要一样")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// public class 后面代表定义一个类的名称，类是java中源代码的基本组织单位")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Hello")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第二行的内容是万能不变的固定写法,代表main方法 ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" main "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第三行是打印输出语句        ")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The,world!食堂泼辣酱"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"常量和变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量和变量"}},[s._v("#")]),s._v(" 常量和变量")]),s._v(" "),a("blockquote",[a("p",[s._v("常量: 在程序运行期间,固定不变的量")])]),s._v(" "),a("h3",{attrs:{id:"常量的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量的分类"}},[s._v("#")]),s._v(" 常量的分类:")]),s._v(" "),a("ol",[a("li",[s._v('字符串常量: 凡是用双引号引起来的部分,叫做字符串变量,例如:"abc","hello","233"')]),s._v(" "),a("li",[s._v("整数常量: 直接写上的数字,没有小数点,例如: 100,200,3,-3000")]),s._v(" "),a("li",[s._v("浮点数常量: 直接写上的数字,有小数点,例如: 3.3,0,3")]),s._v(" "),a("li",[s._v("字符常量: 单引号引起来的单个字符,例如: 'A', '3', '中'")]),s._v(" "),a("li",[s._v("布尔常量: 只有两种取值,true和false")]),s._v(" "),a("li",[s._v("空常量: null 代表没有任何数据 (空常量不能直接用来打印输出)")])]),s._v(" "),a("h3",{attrs:{id:"变量-在程序运行期间-内容可以发送改变的量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量-在程序运行期间-内容可以发送改变的量"}},[s._v("#")]),s._v(" 变量: 在程序运行期间,内容可以发送改变的量")]),s._v(" "),a("blockquote",[a("p",[s._v("创建一个变量并且使用的格式: 数据类型 变量名称;")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" money"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个变量")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" money "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明并赋值")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("注意事项:")])]),s._v(" "),a("ol",[a("li",[s._v("在使用float和long类型的时候 字母后缀F和L不能丢掉,需要配套使用")]),s._v(" "),a("li",[s._v("没有赋值的变量,不能使用,需要赋值后才可以使用")]),s._v(" "),a("li",[s._v("变量不能使用超过作用域的范围")]),s._v(" "),a("li",[s._v("作用域: 从定义变量的一行开始,一直到直接所属的大括号为止")])]),s._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),a("h3",{attrs:{id:"基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[s._v("#")]),s._v(" 基本数据类型")]),s._v(" "),a("ol",[a("li",[s._v("整数型\n"),a("ol",[a("li",[s._v("byte 字节型 内存占用 1个字节 取值范围 -128 ~ 127")]),s._v(" "),a("li",[s._v("short 短整型 内存占用 2个字节 取值范围 -32768 ~ 32767")]),s._v(" "),a("li",[s._v("int(默认) 整形  内存占用 4个字节")]),s._v(" "),a("li",[s._v("long 长整形 内存占用 8个字节")])])]),s._v(" "),a("li",[s._v("浮点型\n"),a("ol",[a("li",[s._v("float 单精度浮点数  内存占用 4个字节")]),s._v(" "),a("li",[s._v("double(默认) 双精度浮点数 内存占用 8个字节")])])]),s._v(" "),a("li",[s._v("字符型\n"),a("ol",[a("li",[s._v("char 内存占用 2个字节 取值范围 0 ~ 65535")])])]),s._v(" "),a("li",[s._v("布尔型\n"),a("ol",[a("li",[s._v("boolean 内存占用 1个字节 取值范围 true,false")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("注意事项")])]),s._v(" "),a("ol",[a("li",[s._v("字符串不是基本类型,而是引用类型")]),s._v(" "),a("li",[s._v("浮点型可能只是一个近视值,并非精确的值")]),s._v(" "),a("li",[s._v("数据范围与字节数不一定相关,例如float 数据范围比long更广泛,但是float是4字节,long是8字节")]),s._v(" "),a("li",[s._v("浮点数当中默认类型是double, 如果一定要使用float类型,需要加上一个后缀F,如果是整数,默认为int类型,如果一定要使用long类型,需要加上一个后缀L,推荐大写字母后缀")])]),s._v(" "),a("h3",{attrs:{id:"引用数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[s._v("#")]),s._v(" 引用数据类型")]),s._v(" "),a("ol",[a("li",[s._v("字符串")])]),s._v(" "),a("h3",{attrs:{id:"数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换"}},[s._v("#")]),s._v(" 数据类型转换")]),s._v(" "),a("p",[s._v("当数据类型不一样时,会发生数据类型转换")]),s._v(" "),a("ol",[a("li",[s._v("自动类型转换(隐式转换)\n"),a("ul",[a("li",[s._v("特点: 代码不需要进行特殊处理,自动完成")]),s._v(" "),a("li",[s._v("规则: 数据范围从小到大 例如: long num = 100; 100默认是int int比long小,默认转换为long")])])]),s._v(" "),a("li",[s._v("强制类型转换(显式转换)\n"),a("ul",[a("li",[s._v("特点: 代码需要特殊的格式处理,不能自动完成")]),s._v(" "),a("li",[s._v("格式: 范围小的类型 范围小的变量名 = (范围小的类型) 原本范围大的数据 例: "),a("code",[s._v("int num = (int) 100L")])])])])]),s._v(" "),a("blockquote",[a("p",[s._v("注意事项")])]),s._v(" "),a("ol",[a("li",[s._v("强制类型转换一般不推荐使用,因为可能发生精度损失(小数),数据溢出(整数)")]),s._v(" "),a("li",[s._v("byte/short/char这三种类型都可以发生数学运算,都会被首先提升为int类型,再计算")]),s._v(" "),a("li",[s._v("char类型数学运算时会转换成字符keycode(ASCII码表)数字,进行运算,例如:A = 65 ,计算机的底层会用一个数字(二进制)二进制来代表字符")]),s._v(" "),a("li",[s._v("short/byte 强制转换int,需要保证逻辑上真实大小本来就没有超过short/byte的范围,否则会发生数据溢出")]),s._v(" "),a("li",[s._v("boolean类型不能发生数据类型转换,不能当成1和0来看待")]),s._v(" "),a("li",[s._v("对于byte/short/char三种类型来说,如果右侧赋值的数值没有超过范围,那么javac会自动隐含的帮我们补上一个(byte)(short)(char)\n"),a("ol",[a("li",[s._v("如果没有超过左侧的范围,编译器补上强转")]),s._v(" "),a("li",[s._v("如果右侧超过左侧范围,那么编译器报错")]),s._v(" "),a("li",[s._v("在给变量进行赋值的时候,如果右侧的表达式当中全部都是常量,没有变量,那么编译器会直接将若干个常量表达式计算得到结果")])])])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等号右边全部都是常量,没有变量参与运算")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编译之后,得到的.class字节码文件当中相当于直接就是:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 右侧常量结果数值,没有超过左侧范围,所以正确,这叫做编译器的常量优化")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 但是注意:一旦表达式中有变量参与,那么久不能进行这种优化了")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"数字和字符的对照关系表-编码表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字和字符的对照关系表-编码表"}},[s._v("#")]),s._v(" 数字和字符的对照关系表(编码表)")]),s._v(" "),a("ol",[a("li",[s._v("ASCII码表: 美国信息交换标准代码")]),s._v(" "),a("li",[s._v("Unicode码表: 万国码,开头0-127和ASCII完全一样,从128开始包含更多字符")])]),s._v(" "),a("h2",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" 运算符")]),s._v(" "),a("ul",[a("li",[s._v("运算符: 进行特点操作的符号,例如: + - * /")]),s._v(" "),a("li",[s._v("表达式: 用运算符连起来的式子叫做表达式")])]),s._v(" "),a("h3",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项:")]),s._v(" "),a("ol",[a("li",[s._v("一旦运算当中有不同类型的数据相加,那么结果将会是数据范围大的那种")]),s._v(" "),a("li",[s._v("对于字符char类型来说,再计算之前,char会被提升成为int,再计算")]),s._v(" "),a("li",[s._v("字符串加法运算是拼接操作")]),s._v(" "),a("li",[s._v("自增运算符如果符合在变量前面,那么变量立刻+1,然后拿结果再进行运算,后++,先进行运算,再自增")]),s._v(" "),a("li",[s._v("总结:先加后用,先用后加")])]),s._v(" "),a("h2",{attrs:{id:"逻辑运算-与-或-非"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算-与-或-非"}},[s._v("#")]),s._v(" 逻辑运算,与&&或||非!")]),s._v(" "),a("ol",[a("li",[s._v("逻辑运算只能用于布尔值")]),s._v(" "),a("li",[s._v("与或,需要左右各自有一个布尔值,但是取反只要有一个唯一的布尔值即可")]),s._v(" "),a("li",[s._v("多个条件可以连续写,1<4 && 4>2")])]),s._v(" "),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[s._v("#")]),s._v(" 方法")]),s._v(" "),a("p",[s._v("定义一个方法的基本格式:")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法名称命名规则使用小驼峰")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" boid 方法名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法体可以包含任意条语句")]),s._v("\n        方法体\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"jdk9新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jdk9新特性"}},[s._v("#")]),s._v(" JDK9新特性")]),s._v(" "),a("h3",{attrs:{id:"jshell脚本工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jshell脚本工具"}},[s._v("#")]),s._v(" Jshell脚本工具")]),s._v(" "),a("ol",[a("li",[s._v("在命令行中使用 jshell 进入jshell")]),s._v(" "),a("li",[s._v("使用/exit退出jshell")]),s._v(" "),a("li",[s._v("适合及其简单的情况")])]),s._v(" "),a("h2",{attrs:{id:"分支结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支结构"}},[s._v("#")]),s._v(" 分支结构")]),s._v(" "),a("h3",{attrs:{id:"switch注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch注意事项"}},[s._v("#")]),s._v(" switch注意事项")]),s._v(" "),a("ol",[a("li",[s._v("多个case后面的数值不可以重复")]),s._v(" "),a("li",[s._v("switch后面小括号当中只能是下列数据类型:\n"),a("ul",[a("li",[s._v("基本数据类型:byte/short/char/int")]),s._v(" "),a("li",[s._v("引用数据类型:String 字符串 / enum 枚举")])])]),s._v(" "),a("li",[s._v("switch 语句格式可以很灵活,前后顺序可以颠倒,并且break语句可以省略")])]),s._v(" "),a("h2",{attrs:{id:"循环结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环结构"}},[s._v("#")]),s._v(" 循环结构")]),s._v(" "),a("h3",{attrs:{id:"for-基本结构组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-基本结构组成"}},[s._v("#")]),s._v(" for 基本结构组成")]),s._v(" "),a("ol",[a("li",[s._v("初始化语句:在循环开始最初执行,并且只做一次")]),s._v(" "),a("li",[s._v("条件判断: 如果成立,则循环继续,不成字则退出循环")]),s._v(" "),a("li",[s._v("循环体: 重复要做的事情内容")]),s._v(" "),a("li",[s._v("步进语句: 每次循环之后要进行的扫尾工作")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//todo;")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 计算1-100直接偶数和")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" sum "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sum1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于累加的变量")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果是偶数")]),s._v("\n                sum1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 累加")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"while-基本结构组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while-基本结构组成"}},[s._v("#")]),s._v(" while 基本结构组成")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    初始化语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件判断"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        循环体"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        步进语句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"三种循环的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三种循环的区别"}},[s._v("#")]),s._v(" 三种循环的区别")]),s._v(" "),a("ol",[a("li",[s._v("如果条件判断从来没有满足过,那么for循环和while循环将会执行0次,但是do-while至少会执行一次")]),s._v(" "),a("li",[s._v("for循环的变量在小括号中定义的,只有循环内部才可以使用")]),s._v(" "),a("li",[s._v("break关键字的用法\n"),a("ul",[a("li",[s._v("可以在switch语句中,一旦执行,整个switch语句立刻结束")]),s._v(" "),a("li",[s._v("还可以哟用在循环语句中,一旦执行,整个循环立刻结束,打断循环")]),s._v(" "),a("li",[s._v("凡是次数确定的场景多用for循环,否则多用while循环")])])]),s._v(" "),a("li",[s._v("continue关键字的用法\n"),a("ul",[a("li",[s._v("一旦执行,立即跳过当前次循环剩余内容,开始下一次循环")])])])]),s._v(" "),a("h2",{attrs:{id:"使用idea创建java项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用idea创建java项目"}},[s._v("#")]),s._v(" 使用idea创建java项目")]),s._v(" "),a("ol",[a("li",[s._v("第一步,新建一个项目,project")]),s._v(" "),a("li",[s._v("第二布,新建一个包,pakeage")]),s._v(" "),a("li",[s._v("第三步,新建一个类,javaclass")]),s._v(" "),a("li",[s._v("运行: run")])]),s._v(" "),a("h2",{attrs:{id:"idea基本配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#idea基本配置"}},[s._v("#")]),s._v(" idea基本配置")]),s._v(" "),a("ol",[a("li",[s._v("自动补全: 在settings-> keymap->main menu-> Code-> codeCompletion中 找到Basic 设置为alt+/")])]),s._v(" "),a("h2",{attrs:{id:"方法定义的注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法定义的注意事项"}},[s._v("#")]),s._v(" 方法定义的注意事项")]),s._v(" "),a("h3",{attrs:{id:"方法定义的基本格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法定义的基本格式"}},[s._v("#")]),s._v(" 方法定义的基本格式")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    修饰符 返回值类型 方法名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("参数名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    方法体\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" 返回值\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n``` java\n    修饰符"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("现阶段的固定写法"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v("\n    返回值类型"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 也就是方法最终产生的数据结果是什么类型\n    方法名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("驼峰的名称\n    参数类型"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 进入方法的数据是什么类型\n    参数名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 进入方法的数据对于的变量名称\n    方法体"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 方法要做的事情\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 两个作用"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("第一停止当前方法"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("第二将后面的返回值还给调用处\n    返回值"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 也就是方法执行后最终产生的数据结果\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"方法的三种调用格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法的三种调用格式"}},[s._v("#")]),s._v(" 方法的三种调用格式")]),s._v(" "),a("ol",[a("li",[s._v("单独调用: 方法名称(参数)")]),s._v(" "),a("li",[s._v("打印调用:System.out.println(方法名称(参数))")]),s._v(" "),a("li",[s._v("赋值调用:把返回值交个左边的变量 数据类型 变量名称 = 方法名称(参数)")])]),s._v(" "),a("blockquote",[a("p",[s._v("注意: 返回值类型为void的,只能单独调用,不能打印调用或者赋值调用")])]),s._v(" "),a("h2",{attrs:{id:"方法重载-overload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法重载-overload"}},[s._v("#")]),s._v(" 方法重载 overload")]),s._v(" "),a("p",[s._v("对于功能类似的方法来说,因为参数列表不一样,就很麻烦,需要方法重载\n方法重载: 多个方法的名称一样,但是参数列表不一样\n方法重载与下列因素相关")]),s._v(" "),a("ol",[a("li",[s._v("参数个数不同")]),s._v(" "),a("li",[s._v("参数类型不同")]),s._v(" "),a("li",[s._v("参数的多类型顺序不同\n方法重载与下列因素无关")]),s._v(" "),a("li",[s._v("参数名称不同")]),s._v(" "),a("li",[s._v("与返回值类型无关")])]),s._v(" "),a("p",[s._v("实例:")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Demo1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"22222222"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3333333"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4444444"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);