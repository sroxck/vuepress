(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{535:function(t,a,s){t.exports=s.p+"assets/img/lianbiao.db73f736.png"},536:function(t,a,s){t.exports=s.p+"assets/img/hongheishu.cfd24b15.png"},703:function(t,a,s){"use strict";s.r(a);var r=s(58),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("常见的数据解构有:栈,队列,数组,链表,和红黑树")]),t._v(" "),r("h2",{attrs:{id:"栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),r("p",[t._v("特点: 先进后出")]),t._v(" "),r("h2",{attrs:{id:"队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),r("p",[t._v("特点: 先进先出")]),t._v(" "),r("h2",{attrs:{id:"数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),r("p",[t._v("特点: 查找快,增删慢\n查找快: 通过首地址查找到数组,通过索引直接查找到指定元素\n增删慢: 数组长度不可变,需要新创建一个数组,将旧数组的数据复制过来,然后做增加或删除,再将新地址值指向变量,销毁旧数组")]),t._v(" "),r("h2",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),r("p",[t._v("特点: 增删快,查找慢\n查找慢: 链表中地址不是连续的,每次查询元素,都必须重头开始查询\n增删快: 链表结构,增加/删除一个元素,对链表的整体结构没有影响,所以增删快")]),t._v(" "),r("p",[t._v("链表中的每一个元素也称之为一个节点,一个节点包含了一个数据源(存储数组),两个指针域(存储地址)")]),t._v(" "),r("h3",{attrs:{id:"单向链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单向链表"}},[t._v("#")]),t._v(" 单向链表")]),t._v(" "),r("p",[t._v("链表中只有一条链子,不能保证元素的顺序(存储元素和取出元素顺便有可能不一致)")]),t._v(" "),r("h3",{attrs:{id:"双向链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#双向链表"}},[t._v("#")]),t._v(" 双向链表")]),t._v(" "),r("p",[t._v("链表中有两条链子,有一条链子是专门记录元素的顺序的,是一个有序的集合")]),t._v(" "),r("p",[r("img",{attrs:{src:s(535),alt:"img"}})]),t._v(" "),r("h2",{attrs:{id:"红黑树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#红黑树"}},[t._v("#")]),t._v(" 红黑树")]),t._v(" "),r("p",[t._v("红黑树趋近于平衡树,查询的速度非常快,查询叶子节点最大次数和最小次数不能超过2倍")]),t._v(" "),r("p",[r("img",{attrs:{src:s(536),alt:"img"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);