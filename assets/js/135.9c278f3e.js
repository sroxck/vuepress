(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{698:function(t,a,s){"use strict";s.r(a);var n=s(58),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"异常体系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常体系"}},[t._v("#")]),t._v(" 异常体系")]),t._v(" "),s("p",[t._v("异常的根类是: Throwable 有两个子类 Error和 Exception,平时所说的异常是指 Exception\njava.lang.Throwable 是Java语言中所有错误或异常的超类")]),t._v(" "),s("h2",{attrs:{id:"exception"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exception"}},[t._v("#")]),t._v(" Exception")]),t._v(" "),s("p",[t._v("Exception 是编译期异常,进行编译时出的问题")]),t._v(" "),s("h3",{attrs:{id:"runtimeexception"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#runtimeexception"}},[t._v("#")]),t._v(" RuntimeException")]),t._v(" "),s("p",[t._v("RuntimeException 运行期异常,java程序运行期间出现的问题")]),t._v(" "),s("blockquote",[s("p",[t._v("异常相当于程序得了一个小毛病,把异常处理掉,程序可以继续执行")])]),t._v(" "),s("h2",{attrs:{id:"error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[t._v("#")]),t._v(" Error")]),t._v(" "),s("blockquote",[s("p",[t._v("Error就相当于程序得了一个无法治愈的病(癌症),就必须修改代码,程序才能继续执行")])]),t._v(" "),s("h2",{attrs:{id:"throws-抛出异常的声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#throws-抛出异常的声明"}},[t._v("#")]),t._v(" Throws 抛出异常的声明")]),t._v(" "),s("blockquote",[s("p",[t._v("throws是方法可能抛出异常的声明。(用在声明方法时，表示该方法可能要抛出异常)")])]),t._v(" "),s("p",[t._v("语法："),s("code",[t._v("修饰符 返回值类型 方法名 参数列表 throws 异常类 {......}")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"throw-抛出异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#throw-抛出异常"}},[t._v("#")]),t._v(" Throw 抛出异常")]),t._v(" "),s("blockquote",[s("p",[t._v('使用 throw new 一个异常("提示语")')])]),t._v(" "),s("h2",{attrs:{id:"二者区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二者区别"}},[t._v("#")]),t._v(" 二者区别")]),t._v(" "),s("p",[t._v("throws E1,E2,E3只是告诉程序这个方法可能会抛出这些异常，方法的调用者可能要处理这些异常，而这些异常E1，E2，E3可能是该函数体产生的。")]),t._v(" "),s("p",[t._v("throw则是明确了这个地方要抛出这个异常")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception1")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception2")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"出错了！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"自定义异常"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("代码块中可能会产生3个异常，(Exception1,Exception2,Exception3)。")]),t._v(" "),s("p",[t._v("如果产生Exception1异常，则捕获之后再抛出，由该方法的调用者去处理。")]),t._v(" "),s("p",[t._v('如果产生Exception2异常，则该方法自己处理了（即System.out.println("出错了！");）。所以该方法就不会再向外抛出Exception2异常了，void doA() throws Exception1,Exception3 里面的Exception2也就不用写了。')]),t._v(" "),s("p",[t._v("而Exception3异常是该方法的某段逻辑出错，程序员自己做了处理，在该段逻辑错误的情况下抛出异常Exception3，则该方法的调用者也要处理此异常。")]),t._v(" "),s("p",[t._v("throw语句用在方法体内，表示抛出异常，由方法体内的语句处理。")]),t._v(" "),s("p",[t._v("throws语句用在方法声明后面，表示再抛出异常，由该方法的调用者来处理。")]),t._v(" "),s("p",[t._v("throws主要是声明这个方法会抛出这种类型的异常，使它的调用者知道要捕获这个异常。")]),t._v(" "),s("p",[t._v("throw是具体向外抛异常的动作，所以它是抛出一个异常实例。")]),t._v(" "),s("p",[t._v("throws说明你有那个可能，倾向。")]),t._v(" "),s("p",[t._v("throw的话，那就是你把那个倾向变成真实的了。")]),t._v(" "),s("p",[t._v("同时：")]),t._v(" "),s("p",[t._v("1、throws出现在方法函数头；而throw出现在函数体。")]),t._v(" "),s("p",[t._v("2、throws表示出现异常的一种可能性，并不一定会发生这些异常；throw则是抛出了异常，执行throw则一定抛出了某种异常。")]),t._v(" "),s("p",[t._v("3、两者都是消极处理异常的方式（这里的消极并不是说这种方式不好），只是抛出或者可能抛出异常，但是不会由函数去处理异常，真正的处理异常由函数的上层调用处理。")]),t._v(" "),s("h2",{attrs:{id:"捕获异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#捕获异常"}},[t._v("#")]),t._v(" 捕获异常")]),t._v(" "),s("h3",{attrs:{id:"try-catch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#try-catch"}},[t._v("#")]),t._v(" try catch")]),t._v(" "),s("p",[t._v("try{}catch(Exception e){}")]),t._v(" "),s("p",[t._v("e.getMessage()// 获取异常信息\ne.toString()// 重写了toString方法,打印具体信息")]),t._v(" "),s("h3",{attrs:{id:"try-catch-finally"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#try-catch-finally"}},[t._v("#")]),t._v(" try catch finally")]),t._v(" "),s("p",[t._v("try{}catch(Exception e){}finally {}")]),t._v(" "),s("h3",{attrs:{id:"注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ol",[s("li",[t._v("一次捕获,多次处理")]),t._v(" "),s("li",[t._v("一次捕获,一次处理")]),t._v(" "),s("li",[t._v("多次捕获,多次处理")])]),t._v(" "),s("blockquote",[s("p",[t._v("在finally中不要使用return 否则永远会抛出finally中的return")])]),t._v(" "),s("h2",{attrs:{id:"自定义异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义异常"}},[t._v("#")]),t._v(" 自定义异常")]),t._v(" "),s("p",[t._v("自定义异常类一般都是以Exception结尾,说明类是一个异常类\n2. 自定义异常类,必须继承Exception或者RuntimeException")]),t._v(" "),s("p",[t._v("继承 Exception:name自定义的异常类就是一个编译器异常,如果方法内部抛出编译器异常,就必须处理\n继承 RuntimeException name自定义异常类就是一个运行期异常,无需处理,交个虚拟机处理(中断处理)")])])}),[],!1,null,null,null);a.default=e.exports}}]);