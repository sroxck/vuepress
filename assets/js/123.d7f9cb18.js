(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{693:function(a,t,r){"use strict";r.r(t);var n=r(58),s=Object(n.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"lambda表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lambda表达式"}},[a._v("#")]),a._v(" lambda表达式")]),a._v(" "),r("p",[a._v("标准格式由3部分组成"),r("br"),a._v("\n(参数列表)->{代码逻辑}"),r("br"),a._v("\n()->{}"),r("br"),a._v("\n():接口中抽象方法的参数列表"),r("br"),a._v("\n->:把参数传递给方法体"),r("br"),a._v("\n{}:重写抽象方法的方法体")]),a._v(" "),r("h1",{attrs:{id:"接口中只有一个抽象方法才可以使用lambda表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#接口中只有一个抽象方法才可以使用lambda表达式"}},[a._v("#")]),a._v(" 接口中只有一个抽象方法才可以使用lambda表达式")])])}),[],!1,null,null,null);t.default=s.exports}}]);