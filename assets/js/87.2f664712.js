(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{644:function(t,v,_){"use strict";_.r(v);var i=_(58),e=Object(i.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h3",{attrs:{id:"git-基本知识"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-基本知识"}},[t._v("#")]),t._v(" git 基本知识")]),t._v(" "),_("ol",[_("li",[t._v("git仓库: 用于存放提交记录")]),t._v(" "),_("li",[t._v("暂存区: 临时存放被修改文件")]),t._v(" "),_("li",[t._v("工作目录: 被git管理的项目目录")])]),t._v(" "),_("h3",{attrs:{id:"git-使用前配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-使用前配置"}},[t._v("#")]),t._v(" git 使用前配置")]),t._v(" "),_("ol",[_("li",[t._v("配置提交人姓名: "),_("code",[t._v("git config --global user.name 提交人姓名")])]),t._v(" "),_("li",[t._v("配置提交人邮箱: "),_("code",[t._v("git config --global user.email 提交人邮箱")])]),t._v(" "),_("li",[t._v("查看git配置信息: "),_("code",[t._v("git config --list")])])]),t._v(" "),_("h3",{attrs:{id:"git-提交步骤"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-提交步骤"}},[t._v("#")]),t._v(" git 提交步骤")]),t._v(" "),_("ol",[_("li",[t._v("初始化git仓库: "),_("code",[t._v("git init")])]),t._v(" "),_("li",[t._v("查看文件状态: "),_("code",[t._v("git status")])]),t._v(" "),_("li",[t._v("添加文件到暂存区: "),_("code",[t._v("git add 文件名")])]),t._v(" "),_("li",[t._v("向仓库中提交代码: "),_("code",[t._v("git commit -m 提交信息")])]),t._v(" "),_("li",[t._v("查看提交代码: "),_("code",[t._v("git log")])])]),t._v(" "),_("h3",{attrs:{id:"git-撤销"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-撤销"}},[t._v("#")]),t._v(" git 撤销")]),t._v(" "),_("ol",[_("li",[t._v("用暂存区文件,覆盖工作目录中的文件: "),_("code",[t._v("git checkout 文件名")])]),t._v(" "),_("li",[t._v("将文件从暂存区中删除: "),_("code",[t._v("git rm --chached 文件名")])]),t._v(" "),_("li",[t._v("将git仓库中指定的更新记录恢复出来,并覆盖暂存区和工作目录: "),_("code",[t._v("git reset --hard 提交ID")])])]),t._v(" "),_("h3",{attrs:{id:"git-分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-分支"}},[t._v("#")]),t._v(" git 分支")]),t._v(" "),_("ol",[_("li",[t._v("主分支: "),_("code",[t._v("master")]),t._v(" :git自动产生的一条分支")]),t._v(" "),_("li",[t._v("开发分支:"),_("code",[t._v("develop")]),t._v(": 作为开发的分支,基于"),_("code",[t._v("mastar")]),t._v("分支创建")]),t._v(" "),_("li",[t._v("功能分支:"),_("code",[t._v("feature")]),t._v(": 作为开发具体功能的分支,基于"),_("code",[t._v("develop")]),t._v("分支创建")])]),t._v(" "),_("h3",{attrs:{id:"git-分支命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-分支命令"}},[t._v("#")]),t._v(" git 分支命令")]),t._v(" "),_("ol",[_("li",[t._v("查看分支: "),_("code",[t._v("git branch")])]),t._v(" "),_("li",[t._v("创建分支: "),_("code",[t._v("git branch 分支名称")])]),t._v(" "),_("li",[t._v("切换分支: "),_("code",[t._v("git checkout 分支名称")])]),t._v(" "),_("li",[t._v("创建分支并切换到创建的分支: "),_("code",[t._v("git checkout -b 分支名")])]),t._v(" "),_("li",[t._v("合并分支: "),_("code",[t._v("git merge 分支名 被合并分支名")])]),t._v(" "),_("li",[t._v("删除分支:"),_("code",[t._v("git branch -d 分支名")]),t._v(" 注意:合并分支后才可以删除,可以使用-D强制删除")]),t._v(" "),_("li",[t._v("暂时保存更改,独立于分支,在任何分支可用\n"),_("ol",[_("li",[t._v("存储临时改动: "),_("code",[t._v("git stash")])]),t._v(" "),_("li",[t._v("恢复改动: "),_("code",[t._v("git stash pop")])])])])]),t._v(" "),_("h3",{attrs:{id:"git-忽略清单"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-忽略清单"}},[t._v("#")]),t._v(" git 忽略清单")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v(".gitignore")]),t._v(" 文件中设置不需要被git管理的文件或文件夹")])])])}),[],!1,null,null,null);v.default=e.exports}}]);