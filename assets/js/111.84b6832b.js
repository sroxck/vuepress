(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{671:function(a,s,t){"use strict";t.r(s);var n=t(58),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"final-最终"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#final-最终"}},[a._v("#")]),a._v(" final (最终)")]),a._v(" "),t("p",[a._v("程序中final关键字代表最终的,不可改变的")]),a._v(" "),t("p",[a._v("常见的四种用法:")]),a._v(" "),t("ol",[t("li",[a._v("用来修饰一个类")]),a._v(" "),t("li",[a._v("用来修饰一个方法")]),a._v(" "),t("li",[a._v("用来修饰一个局部变量")]),a._v(" "),t("li",[a._v("用来修饰一个成员变量")])]),a._v(" "),t("h2",{attrs:{id:"final关键字修饰类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#final关键字修饰类"}},[a._v("#")]),a._v(" final关键字修饰类")]),a._v(" "),t("p",[a._v("格式:\npublic final class 类名称 {")]),a._v(" "),t("p",[a._v("}\n含义:\n当前这个类不能有任何的子类(太监类,不能有子类,可以有父类),不能使用final类作为父类\n一个类如果是final的,那么其中所有成员方法都无法进行覆盖重写(因为没儿子)")]),a._v(" "),t("h2",{attrs:{id:"final关键字修饰方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#final关键字修饰方法"}},[a._v("#")]),a._v(" final关键字修饰方法")]),a._v(" "),t("p",[a._v("当final类用来修饰一个方法的时候,这个方法就是最终方法,不能被覆盖重写\n格式: 修饰符 final 返回值类型 方法名称(参数列表){方法体}")]),a._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[a._v("注意")]),a._v(" "),t("p",[a._v("对于类和方法来说,abstract关键字和final关键字不能同时使用,因为冲突")])]),a._v(" "),t("h2",{attrs:{id:"final关键字修饰局部变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#final关键字修饰局部变量"}},[a._v("#")]),a._v(" final关键字修饰局部变量")]),a._v(" "),t("blockquote",[t("p",[a._v("方法的参数也算是局部变量\n一旦使用final用来修饰局部变量,那么这个变量就不能进行更改,一次赋值,终生不变\n格式: final int num = 10; 或者 final int num; num = 10;\n对于基本类型来说,不可变说的是变量当中的数据不可改变\n对于引用类型来说,不可变说的是变量当中的地址值不可改变")])]),a._v(" "),t("h2",{attrs:{id:"final关键字修饰成员变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#final关键字修饰成员变量"}},[a._v("#")]),a._v(" final关键字修饰成员变量")]),a._v(" "),t("p",[a._v("对于成员变量来说,如果使用final关键字进行修饰,name这个变量也照样是不可变的")]),a._v(" "),t("ol",[t("li",[a._v("由于成员变量具有默认值,所以用了final之后必须手动赋值,不会再给默认值了")]),a._v(" "),t("li",[a._v("通过final的成员变量,要么使用直接赋值,要么通过构造方法赋值,二者选其一")]),a._v(" "),t("li",[a._v("通过构造方法赋值,必须保证类当中所有重载的构造方法,都最终会对final修饰的变量赋值")])]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"lee"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 直接赋值")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 构造赋值")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 构造赋值")]),a._v("\n        name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"lee1"')]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 构造赋值")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);