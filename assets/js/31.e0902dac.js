(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{532:function(s,n,a){s.exports=a.p+"assets/img/duotai.265985f6.png"},700:function(s,n,a){"use strict";a.r(n);var t=a(58),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"java多态性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java多态性"}},[s._v("#")]),s._v(" JAVA多态性")]),s._v(" "),t("p",[s._v("面向对象三大特征: 封装性,继承性,"),t("code",[s._v("多态性")]),s._v("\nextends继承或者implements实现,是多态性的前提\n"),t("img",{attrs:{src:a(532),alt:"img"}})]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n* 代码中体现多态性,其实就是一句话: 父类引用指向子类对象\n* 格式:\n* 父类名称 对象名 = new 子类名称();\n* 或者:\n* 接口名称 对象名 = new 实现类名称();\n* */")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("blockquote",[t("p",[s._v("左侧父类的引用,指向右侧子类的对象 Fu obj = new Zi();")])]),s._v(" "),t("p",[s._v("多态的成员变量的使用特点\n编译看左边,运行看左边\n多态的成员方法的使用特点\n编译看左边,运行看右边")])])}),[],!1,null,null,null);n.default=e.exports}}]);