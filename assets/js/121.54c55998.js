(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{689:function(s,a,t){"use strict";t.r(a);var n=t(58),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"arraylist集合类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraylist集合类"}},[s._v("#")]),s._v(" ArrayList集合类")]),s._v(" "),t("p",[t("code",[s._v("ArrayList<E>")]),s._v(" E代表泛型")]),s._v(" "),t("p",[s._v("数组的长度不可以发生改变但是arrayList集合长度可以随意变化\n对于ArrayList来说,有一个尖括号"),t("code",[s._v("<E>")]),s._v("代表泛型"),t("br"),s._v("\n泛型: 也就是装在集合中的所有元素,全都是什么类型\n泛型: 只能是引用类型,不能是基本类型")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建了一个名为list 的 字符串类型的 集合,只能装字符串")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从jdk1.7版本开始 右侧的尖括号中可以不写内容,但是<>本身还是要写的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于ArrayList集合来说,打印得到的不是地址值,而是内容,如果内容是空,得到的是空的中括号[]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("blockquote",[t("p",[s._v("向集合中添加数据,使用add方法")])]),s._v(" "),t("p",[t("code",[s._v('list.add("字符串")')])]),s._v(" "),t("h2",{attrs:{id:"arraylist-常用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-常用方法"}},[s._v("#")]),s._v(" ArrayList 常用方法")]),s._v(" "),t("h3",{attrs:{id:"添加方法-add"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加方法-add"}},[s._v("#")]),s._v(" 添加方法 add")]),s._v(" "),t("p",[t("code",[s._v("public boolean add(E e): 向集合中添加元素,参数的类型和泛型一致,返回值是添加的动作是否成功,布尔值")]),s._v("\n例: list.add(e)")]),s._v(" "),t("blockquote",[t("p",[s._v("对于ArrayList集合来说,add添加一定是成功的,所以返回值可以不用,但是其他集合不一定成功")])]),s._v(" "),t("h3",{attrs:{id:"获取-get"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取-get"}},[s._v("#")]),s._v(" 获取 get")]),s._v(" "),t("p",[t("code",[s._v("public E get(int index): 从集合中获取元素,参数是索引编号,返回值就是对于位置的元素")]),s._v("\n例: list.get(index)")]),s._v(" "),t("h3",{attrs:{id:"删除-remove"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除-remove"}},[s._v("#")]),s._v(" 删除 remove")]),s._v(" "),t("p",[t("code",[s._v("public E remove(int index): 从集合中删除元素,参数是索引编号,返回值就是被删除的元素")]),s._v("\n例: list.remove(index)")]),s._v(" "),t("h3",{attrs:{id:"获取长度-size"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取长度-size"}},[s._v("#")]),s._v(" 获取长度 size")]),s._v(" "),t("p",[t("code",[s._v("public int size(): 获取集合的长度,返回值是集合中包含的元素个数")]),s._v("\n例: list.size()")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("使用ArrayList.fori 快捷键可以自动生成代码块\n")])])])]),s._v(" "),t("h2",{attrs:{id:"arraylist-使用基本类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-使用基本类型"}},[s._v("#")]),s._v(" ArrayList 使用基本类型")]),s._v(" "),t("p",[s._v("如果需要在集合ArrayList中存储基本数据类型,必须使用基本类型对应的包装类")]),s._v(" "),t("p",[s._v("基本类型:byte,short,int,long,float,double,char,boolean\n包装类(引用类型,包装类都在java.lang包下):Byte,Short,Integer(特殊),Long,Float,Double,Character(特殊),Boolean")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建一个int类型的ArrayList集合")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nlist"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从jdk1.5+开始,支持自动装箱,自动拆箱")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自动装箱:基本类型自动变成包装类型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自动拆箱:包装类型自动拆成基本类型")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);